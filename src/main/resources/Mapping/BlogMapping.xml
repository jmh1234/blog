<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.hcsp.dao.BlogDao">
    <insert id="addBlogInfo" parameterType="Blog">
        <selectKey resultType="INTEGER" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO blog (title, description, content, user_id)
        VALUES (#{title}, #{description}, #{content}, #{userId})
    </insert>
    <select id="getBlogInfoById" resultMap="blog" parameterType="int">
        SELECT
            blog.id          AS blog_id,
            blog.title       AS blog_title,
            blog.description AS blog_description,
            blog.content     AS blog_content,
            blog.updated_at  AS blog_updated_at,
            blog.created_at  AS blog_created_at,
            user.id          AS user_id,
            user.username    AS user_username,
            user.avatar      AS user_avatar,
            user.updated_at  AS user_updated_at,
            user.created_at  AS user_created_at
        FROM blog
            LEFT OUTER JOIN user
                ON blog.user_id = user.id
        WHERE blog.id = #{blogId}
    </select>
    <select id="getBlogListByUserId" parameterType="Blog" resultMap="blog">
        SELECT
        blog.id AS blog_id,
        blog.title AS blog_title,
        blog.description AS blog_description,
        blog.content AS blog_conent,
        blog.updated_at AS blog_updated_at,
        blog.created_at AS blog_created_at,
        blog.user_id AS user_id,
        user.username AS user_username,
        user.avatar AS user_avatar,
        user.updated_at AS user_updated_at,
        user.created_at AS user_created_at
        FROM
        blog
        LEFT OUTER JOIN user ON blog.user_id = user.id
        <if test="userId != null">
            WHERE blog.user_id = #{userId}
        </if>
        order by blog.updated_at desc
    </select>
    <update id="updateBlogById" parameterType="Blog">
        UPDATE blog SET updated_at=now()
        <if test="title != null">
            , title = #{title}
        </if>
        <if test="description != null">
            , description = #{description}
        </if>
        <if test="content != null">
            , content = #{content}
        </if>
        WHERE 1 = 1
        <if test="id != null">
            AND id = #{id}
        </if>
    </update>
    <delete id="deleteBlogById" parameterType="int">
        <if test="blogId != null">
            DELETE FROM blog WHERE id = #{blogId}
        </if>
    </delete>

    <resultMap id="blog" type="Blog">
        <id property="id" column="blog_id"/>
        <result property="title" column="blog_title"/>
        <result property="description" column="blog_description"/>
        <result property="content" column="blog_content"/>
        <result property="updatedAt" column="blog_updated_at"/>
        <result property="createdAt" column="blog_created_at"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="username" column="user_username"/>
            <result property="avatar" column="user_avatar"/>
            <result property="updatedAt" column="user_updated_at"/>
            <result property="createdAt" column="user_created_at"/>
        </association>
    </resultMap>
</mapper>
